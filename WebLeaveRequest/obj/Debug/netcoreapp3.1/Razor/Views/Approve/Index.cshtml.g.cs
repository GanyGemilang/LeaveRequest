#pragma checksum "C:\Users\asus\Documents\GitHub\TALeaveRequest\LeaveRequest\WebLeaveRequest\Views\Approve\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8e5830a7e5800f558451f5be4ee7e5cff457616b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Approve_Index), @"mvc.1.0.view", @"/Views/Approve/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\asus\Documents\GitHub\TALeaveRequest\LeaveRequest\WebLeaveRequest\Views\_ViewImports.cshtml"
using WebLeaveRequest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\asus\Documents\GitHub\TALeaveRequest\LeaveRequest\WebLeaveRequest\Views\_ViewImports.cshtml"
using WebLeaveRequest.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e5830a7e5800f558451f5be4ee7e5cff457616b", @"/Views/Approve/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"28d741b4d94d362fce5bad8bee2cc526cb0d5437", @"/Views/_ViewImports.cshtml")]
    public class Views_Approve_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""p-3"">
    <h4 class=""text-muted font-18 m-b-5 text-center"">Welcome</h4>
    <p class=""text-muted text-center"">Approve Data Leave Request.</p>

    <div class=""container-fluid mt-5"">
        <table id=""myTable"" class=""table table-striped table-bordered dataTable"" style=""width:100%"">
            <thead class=""thead-light"">
                <tr role=""row"">
                    <th>No</th>
                    <th>Id</th>
                    <th>NIK</th>
                    <th>First Name</th>
                    <th>Reason Request</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Status</th>
                    <th>Notes</th>
                    <th>Approved HRD</th>
                    <th>Approved Manager</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>No</th>
                    <th>Id</th>
                    <th>NIK");
            WriteLiteral(@"</th>
                    <th>First Name</th>
                    <th>Reason Request</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Status</th>
                    <th>Notes</th>
                    <th>Approved HRD</th>
                    <th>Approved Manager</th>
                    <th>Action</th>
                </tr>
            </tfoot>
            <tbody></tbody>
        </table>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
            var table = null;
            $(document).ready(function () {
                table = $(""#myTable"").DataTable({
                    ""filter"": true,
                    ""orderMulti"": false,
                    ""ajax"": {
                        ""url"": ""https://localhost:44330/api/request"",
                        ""type"": ""get"",
                        ""datatype"": ""json"",
                        ""dataSrc"": ""data""
                    },
                    ""columnDefs"": [
                        {
                            ""targets"": [1, 8, 9],
                            ""visible"": false,

                        },
                        {
                            ""targets"": [0, 2],
                            ""searchable"": true
                        },
                        {
                            ""targets"": [3],
                            ""searchable"": false,
                            ""orderable"": false
                        },
       ");
                WriteLiteral(@"             ],
                    ""columns"": [
                        {
                            ""data"": null,
                            ""render"": function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        {
                            ""data"": 'id'
                        },
                        {
                            ""data"": 'nik'
                        },
                        {
                            ""data"": 'User.firstName'
                        },
                        {
                            ""data"": 'reasonRequest'
                        },
                        {
                            ""data"": 'startDate'
                        },
                        {
                            ""data"": 'endDate'
                        },
                        {
                            ""data"": 'sta");
                WriteLiteral(@"tus'
                        },
                        {
                            ""data"": 'notes'
                        },
                        {
                            ""data"": 'approvedHRD'
                        },
                        {
                            ""data"": 'approvedManager'
                        },
                        {
                            ""data"": 'id',
                            ""render"": function (data, type, row, meta) {
                                return '<a href=""javascript:void(0)"" class=""far fa-check-circle table-action text-dark"" data-toggle=""tooltip"" data-placement=""top"" title=""Approve"" onclick=""Approve(\'' + row['id'] + '\')""></a> ' +
                                    '<a href=""javascript:void(0)"" class=""far fa-times-circle table-action text-danger"" data-toggle=""tooltip"" data-placement=""top"" title=""Reject"" onclick=""Reject(\'' + row['id'] + '\')""></a>'
                            }
                        }
                  ");
                WriteLiteral(@"  ]
                });
            });

            function Get(id) {
                console.log(id);
                $.ajax({
                    url: ""/Request/Get"",
                    data: { id: id }
                }).done((result) => {
                    console.log(result);
                    var obj = JSON.parse(result);
                    $(""#Request"").modal(""show"");
                    $(""#nik"").val(obj.data.nik);
                    $(""#id"").val(obj.data.id);
                    $(""#reasonrequest"").val(obj.data.reasonRequest);
                    $(""#startdate"").val(obj.data.startDate);
                    $(""#enddate"").val(obj.data.endDate);
                    $(""#notes"").val(obj.data.notes);
                    $(""#ApprovedHRD"").val(obj.data.approvedHRD);
                    $(""#ApprovedManager"").val(obj.data.approvedManager);
                }).fail((error) => {
                    console.log(error);
                })
            }

");
                WriteLiteral(@"
            function Approve(id) {
                var request = new Object();
                request.id = $('#name').val();
                $.ajax({
                    type: ""PUT"",
                    url: '/approve/Approve',
                    data: { id: id }
                }).done((result) => {
                    console.log(""ok"");
                    if (result == 200) {
                        swal('Success', 'Update Successfully', 'success');
                        table.ajax.reload();
                    }
                    else {
                        swal('Error', 'Something Went Wrong', 'error');
                    }
                }).fail((error) => {
                    console.log(error)
                });
            }

");
                WriteLiteral(@"
            function Reject(id) {
                $.ajax({
                    type: ""PUT"",
                    url: '/approve/Reject',
                    data: request
                }).done((result) => {

                    if (result == 200) {
                        swal('Success', 'Update Successfully', 'success');
                        table.ajax.reload();
                    }
                    else {
                        swal('Error', 'Something Went Wrong', 'error');
                    }
                }).fail((error) => {
                    console.log(error)
                });
            }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
